import { Any } from "../../../google/protobuf/any";
import { Result } from "../../../cosmos/base/abci/v1beta1/abci";
import { Reader, Writer } from "protobufjs/minimal";
import * as Long from "long";
export declare const protobufPackage = "cosmos.authz.v1beta1";
/**
 * MsgGrantAuthorizationRequest grants the provided authorization to the grantee on the granter's
 * account with the provided expiration time.
 */
export interface MsgGrantAuthorizationRequest {
    granter: string;
    grantee: string;
    authorization?: Any;
    expiration?: Date;
}
/** MsgExecAuthorizedResponse defines the Msg/MsgExecAuthorizedResponse response type. */
export interface MsgExecAuthorizedResponse {
    result?: Result;
}
/**
 * MsgExecAuthorizedRequest attempts to execute the provided messages using
 * authorizations granted to the grantee. Each message should have only
 * one signer corresponding to the granter of the authorization.
 */
export interface MsgExecAuthorizedRequest {
    grantee: string;
    msgs: Any[];
}
/** MsgGrantAuthorizationResponse defines the Msg/MsgGrantAuthorization response type. */
export interface MsgGrantAuthorizationResponse {
}
/**
 * MsgRevokeAuthorizationRequest revokes any authorization with the provided sdk.Msg type on the
 * granter's account with that has been granted to the grantee.
 */
export interface MsgRevokeAuthorizationRequest {
    granter: string;
    grantee: string;
    methodName: string;
}
/** MsgRevokeAuthorizationResponse defines the Msg/MsgRevokeAuthorizationResponse response type. */
export interface MsgRevokeAuthorizationResponse {
}
export declare const MsgGrantAuthorizationRequest: {
    encode(message: MsgGrantAuthorizationRequest, writer?: Writer): Writer;
    decode(input: Reader | Uint8Array, length?: number | undefined): MsgGrantAuthorizationRequest;
    fromJSON(object: any): MsgGrantAuthorizationRequest;
    fromPartial(object: DeepPartial<MsgGrantAuthorizationRequest>): MsgGrantAuthorizationRequest;
    toJSON(message: MsgGrantAuthorizationRequest): unknown;
};
export declare const MsgExecAuthorizedResponse: {
    encode(message: MsgExecAuthorizedResponse, writer?: Writer): Writer;
    decode(input: Reader | Uint8Array, length?: number | undefined): MsgExecAuthorizedResponse;
    fromJSON(object: any): MsgExecAuthorizedResponse;
    fromPartial(object: DeepPartial<MsgExecAuthorizedResponse>): MsgExecAuthorizedResponse;
    toJSON(message: MsgExecAuthorizedResponse): unknown;
};
export declare const MsgExecAuthorizedRequest: {
    encode(message: MsgExecAuthorizedRequest, writer?: Writer): Writer;
    decode(input: Reader | Uint8Array, length?: number | undefined): MsgExecAuthorizedRequest;
    fromJSON(object: any): MsgExecAuthorizedRequest;
    fromPartial(object: DeepPartial<MsgExecAuthorizedRequest>): MsgExecAuthorizedRequest;
    toJSON(message: MsgExecAuthorizedRequest): unknown;
};
export declare const MsgGrantAuthorizationResponse: {
    encode(_: MsgGrantAuthorizationResponse, writer?: Writer): Writer;
    decode(input: Reader | Uint8Array, length?: number | undefined): MsgGrantAuthorizationResponse;
    fromJSON(_: any): MsgGrantAuthorizationResponse;
    fromPartial(_: DeepPartial<MsgGrantAuthorizationResponse>): MsgGrantAuthorizationResponse;
    toJSON(_: MsgGrantAuthorizationResponse): unknown;
};
export declare const MsgRevokeAuthorizationRequest: {
    encode(message: MsgRevokeAuthorizationRequest, writer?: Writer): Writer;
    decode(input: Reader | Uint8Array, length?: number | undefined): MsgRevokeAuthorizationRequest;
    fromJSON(object: any): MsgRevokeAuthorizationRequest;
    fromPartial(object: DeepPartial<MsgRevokeAuthorizationRequest>): MsgRevokeAuthorizationRequest;
    toJSON(message: MsgRevokeAuthorizationRequest): unknown;
};
export declare const MsgRevokeAuthorizationResponse: {
    encode(_: MsgRevokeAuthorizationResponse, writer?: Writer): Writer;
    decode(input: Reader | Uint8Array, length?: number | undefined): MsgRevokeAuthorizationResponse;
    fromJSON(_: any): MsgRevokeAuthorizationResponse;
    fromPartial(_: DeepPartial<MsgRevokeAuthorizationResponse>): MsgRevokeAuthorizationResponse;
    toJSON(_: MsgRevokeAuthorizationResponse): unknown;
};
/** Msg defines the authz Msg service. */
export interface Msg {
    /**
     * GrantAuthorization grants the provided authorization to the grantee on the granter's
     * account with the provided expiration time.
     */
    GrantAuthorization(request: MsgGrantAuthorizationRequest): Promise<MsgGrantAuthorizationResponse>;
    /**
     * ExecAuthorized attempts to execute the provided messages using
     * authorizations granted to the grantee. Each message should have only
     * one signer corresponding to the granter of the authorization.
     */
    ExecAuthorized(request: MsgExecAuthorizedRequest): Promise<MsgExecAuthorizedResponse>;
    /**
     * RevokeAuthorization revokes any authorization corresponding to the provided method name on the
     * granter's account that has been granted to the grantee.
     */
    RevokeAuthorization(request: MsgRevokeAuthorizationRequest): Promise<MsgRevokeAuthorizationResponse>;
}
export declare class MsgClientImpl implements Msg {
    private readonly rpc;
    constructor(rpc: Rpc);
    GrantAuthorization(request: MsgGrantAuthorizationRequest): Promise<MsgGrantAuthorizationResponse>;
    ExecAuthorized(request: MsgExecAuthorizedRequest): Promise<MsgExecAuthorizedResponse>;
    RevokeAuthorization(request: MsgRevokeAuthorizationRequest): Promise<MsgRevokeAuthorizationResponse>;
}
interface Rpc {
    request(service: string, method: string, data: Uint8Array): Promise<Uint8Array>;
}
declare type Builtin = Date | Function | Uint8Array | string | number | undefined | Long;
export declare type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
export {};
