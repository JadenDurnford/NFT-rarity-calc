"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
exports.__esModule = true;
exports.Balance = exports.GenesisState = exports.protobufPackage = void 0;
/* eslint-disable */
var bank_1 = require("../../../cosmos/bank/v1beta1/bank");
var coin_1 = require("../../../cosmos/base/v1beta1/coin");
var minimal_1 = require("protobufjs/minimal");
exports.protobufPackage = "cosmos.bank.v1beta1";
var baseGenesisState = {};
exports.GenesisState = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        if (message.params !== undefined) {
            bank_1.Params.encode(message.params, writer.uint32(10).fork()).ldelim();
        }
        for (var _i = 0, _a = message.balances; _i < _a.length; _i++) {
            var v = _a[_i];
            exports.Balance.encode(v, writer.uint32(18).fork()).ldelim();
        }
        for (var _b = 0, _c = message.supply; _b < _c.length; _b++) {
            var v = _c[_b];
            coin_1.Coin.encode(v, writer.uint32(26).fork()).ldelim();
        }
        for (var _d = 0, _e = message.denomMetadata; _d < _e.length; _d++) {
            var v = _e[_d];
            bank_1.Metadata.encode(v, writer.uint32(34).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = globalThis.Object.create(baseGenesisState);
        message.balances = [];
        message.supply = [];
        message.denomMetadata = [];
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.params = bank_1.Params.decode(reader, reader.uint32());
                    break;
                case 2:
                    message.balances.push(exports.Balance.decode(reader, reader.uint32()));
                    break;
                case 3:
                    message.supply.push(coin_1.Coin.decode(reader, reader.uint32()));
                    break;
                case 4:
                    message.denomMetadata.push(bank_1.Metadata.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        var message = globalThis.Object.create(baseGenesisState);
        message.balances = [];
        message.supply = [];
        message.denomMetadata = [];
        if (object.params !== undefined && object.params !== null) {
            message.params = bank_1.Params.fromJSON(object.params);
        }
        else {
            message.params = undefined;
        }
        if (object.balances !== undefined && object.balances !== null) {
            for (var _i = 0, _a = object.balances; _i < _a.length; _i++) {
                var e = _a[_i];
                message.balances.push(exports.Balance.fromJSON(e));
            }
        }
        if (object.supply !== undefined && object.supply !== null) {
            for (var _b = 0, _c = object.supply; _b < _c.length; _b++) {
                var e = _c[_b];
                message.supply.push(coin_1.Coin.fromJSON(e));
            }
        }
        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {
            for (var _d = 0, _e = object.denomMetadata; _d < _e.length; _d++) {
                var e = _e[_d];
                message.denomMetadata.push(bank_1.Metadata.fromJSON(e));
            }
        }
        return message;
    },
    fromPartial: function (object) {
        var message = __assign({}, baseGenesisState);
        message.balances = [];
        message.supply = [];
        message.denomMetadata = [];
        if (object.params !== undefined && object.params !== null) {
            message.params = bank_1.Params.fromPartial(object.params);
        }
        else {
            message.params = undefined;
        }
        if (object.balances !== undefined && object.balances !== null) {
            for (var _i = 0, _a = object.balances; _i < _a.length; _i++) {
                var e = _a[_i];
                message.balances.push(exports.Balance.fromPartial(e));
            }
        }
        if (object.supply !== undefined && object.supply !== null) {
            for (var _b = 0, _c = object.supply; _b < _c.length; _b++) {
                var e = _c[_b];
                message.supply.push(coin_1.Coin.fromPartial(e));
            }
        }
        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {
            for (var _d = 0, _e = object.denomMetadata; _d < _e.length; _d++) {
                var e = _e[_d];
                message.denomMetadata.push(bank_1.Metadata.fromPartial(e));
            }
        }
        return message;
    },
    toJSON: function (message) {
        var obj = {};
        message.params !== undefined &&
            (obj.params = message.params ? bank_1.Params.toJSON(message.params) : undefined);
        if (message.balances) {
            obj.balances = message.balances.map(function (e) {
                return e ? exports.Balance.toJSON(e) : undefined;
            });
        }
        else {
            obj.balances = [];
        }
        if (message.supply) {
            obj.supply = message.supply.map(function (e) { return (e ? coin_1.Coin.toJSON(e) : undefined); });
        }
        else {
            obj.supply = [];
        }
        if (message.denomMetadata) {
            obj.denomMetadata = message.denomMetadata.map(function (e) {
                return e ? bank_1.Metadata.toJSON(e) : undefined;
            });
        }
        else {
            obj.denomMetadata = [];
        }
        return obj;
    }
};
var baseBalance = { address: "" };
exports.Balance = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        if (message.address !== "") {
            writer.uint32(10).string(message.address);
        }
        for (var _i = 0, _a = message.coins; _i < _a.length; _i++) {
            var v = _a[_i];
            coin_1.Coin.encode(v, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = globalThis.Object.create(baseBalance);
        message.coins = [];
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.address = reader.string();
                    break;
                case 2:
                    message.coins.push(coin_1.Coin.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        var message = globalThis.Object.create(baseBalance);
        message.coins = [];
        if (object.address !== undefined && object.address !== null) {
            message.address = String(object.address);
        }
        else {
            message.address = "";
        }
        if (object.coins !== undefined && object.coins !== null) {
            for (var _i = 0, _a = object.coins; _i < _a.length; _i++) {
                var e = _a[_i];
                message.coins.push(coin_1.Coin.fromJSON(e));
            }
        }
        return message;
    },
    fromPartial: function (object) {
        var message = __assign({}, baseBalance);
        message.coins = [];
        if (object.address !== undefined && object.address !== null) {
            message.address = object.address;
        }
        else {
            message.address = "";
        }
        if (object.coins !== undefined && object.coins !== null) {
            for (var _i = 0, _a = object.coins; _i < _a.length; _i++) {
                var e = _a[_i];
                message.coins.push(coin_1.Coin.fromPartial(e));
            }
        }
        return message;
    },
    toJSON: function (message) {
        var obj = {};
        message.address !== undefined && (obj.address = message.address);
        if (message.coins) {
            obj.coins = message.coins.map(function (e) { return (e ? coin_1.Coin.toJSON(e) : undefined); });
        }
        else {
            obj.coins = [];
        }
        return obj;
    }
};
var globalThis = (function () {
    if (typeof globalThis !== "undefined")
        return globalThis;
    if (typeof self !== "undefined")
        return self;
    if (typeof window !== "undefined")
        return window;
    if (typeof global !== "undefined")
        return global;
    throw "Unable to locate global object";
})();
