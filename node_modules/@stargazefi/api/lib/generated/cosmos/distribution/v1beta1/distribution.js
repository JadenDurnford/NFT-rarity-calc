"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
exports.__esModule = true;
exports.CommunityPoolSpendProposalWithDeposit = exports.DelegationDelegatorReward = exports.DelegatorStartingInfo = exports.CommunityPoolSpendProposal = exports.FeePool = exports.ValidatorSlashEvents = exports.ValidatorSlashEvent = exports.ValidatorOutstandingRewards = exports.ValidatorAccumulatedCommission = exports.ValidatorCurrentRewards = exports.ValidatorHistoricalRewards = exports.Params = exports.protobufPackage = void 0;
/* eslint-disable */
var Long = require("long");
var coin_1 = require("../../../cosmos/base/v1beta1/coin");
var minimal_1 = require("protobufjs/minimal");
exports.protobufPackage = "cosmos.distribution.v1beta1";
var baseParams = {
    communityTax: "",
    baseProposerReward: "",
    bonusProposerReward: "",
    withdrawAddrEnabled: false
};
exports.Params = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        if (message.communityTax !== "") {
            writer.uint32(10).string(message.communityTax);
        }
        if (message.baseProposerReward !== "") {
            writer.uint32(18).string(message.baseProposerReward);
        }
        if (message.bonusProposerReward !== "") {
            writer.uint32(26).string(message.bonusProposerReward);
        }
        if (message.withdrawAddrEnabled === true) {
            writer.uint32(32).bool(message.withdrawAddrEnabled);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = globalThis.Object.create(baseParams);
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.communityTax = reader.string();
                    break;
                case 2:
                    message.baseProposerReward = reader.string();
                    break;
                case 3:
                    message.bonusProposerReward = reader.string();
                    break;
                case 4:
                    message.withdrawAddrEnabled = reader.bool();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        var message = globalThis.Object.create(baseParams);
        if (object.communityTax !== undefined && object.communityTax !== null) {
            message.communityTax = String(object.communityTax);
        }
        else {
            message.communityTax = "";
        }
        if (object.baseProposerReward !== undefined &&
            object.baseProposerReward !== null) {
            message.baseProposerReward = String(object.baseProposerReward);
        }
        else {
            message.baseProposerReward = "";
        }
        if (object.bonusProposerReward !== undefined &&
            object.bonusProposerReward !== null) {
            message.bonusProposerReward = String(object.bonusProposerReward);
        }
        else {
            message.bonusProposerReward = "";
        }
        if (object.withdrawAddrEnabled !== undefined &&
            object.withdrawAddrEnabled !== null) {
            message.withdrawAddrEnabled = Boolean(object.withdrawAddrEnabled);
        }
        else {
            message.withdrawAddrEnabled = false;
        }
        return message;
    },
    fromPartial: function (object) {
        var message = __assign({}, baseParams);
        if (object.communityTax !== undefined && object.communityTax !== null) {
            message.communityTax = object.communityTax;
        }
        else {
            message.communityTax = "";
        }
        if (object.baseProposerReward !== undefined &&
            object.baseProposerReward !== null) {
            message.baseProposerReward = object.baseProposerReward;
        }
        else {
            message.baseProposerReward = "";
        }
        if (object.bonusProposerReward !== undefined &&
            object.bonusProposerReward !== null) {
            message.bonusProposerReward = object.bonusProposerReward;
        }
        else {
            message.bonusProposerReward = "";
        }
        if (object.withdrawAddrEnabled !== undefined &&
            object.withdrawAddrEnabled !== null) {
            message.withdrawAddrEnabled = object.withdrawAddrEnabled;
        }
        else {
            message.withdrawAddrEnabled = false;
        }
        return message;
    },
    toJSON: function (message) {
        var obj = {};
        message.communityTax !== undefined &&
            (obj.communityTax = message.communityTax);
        message.baseProposerReward !== undefined &&
            (obj.baseProposerReward = message.baseProposerReward);
        message.bonusProposerReward !== undefined &&
            (obj.bonusProposerReward = message.bonusProposerReward);
        message.withdrawAddrEnabled !== undefined &&
            (obj.withdrawAddrEnabled = message.withdrawAddrEnabled);
        return obj;
    }
};
var baseValidatorHistoricalRewards = { referenceCount: 0 };
exports.ValidatorHistoricalRewards = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        for (var _i = 0, _a = message.cumulativeRewardRatio; _i < _a.length; _i++) {
            var v = _a[_i];
            coin_1.DecCoin.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.referenceCount !== 0) {
            writer.uint32(16).uint32(message.referenceCount);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = globalThis.Object.create(baseValidatorHistoricalRewards);
        message.cumulativeRewardRatio = [];
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.cumulativeRewardRatio.push(coin_1.DecCoin.decode(reader, reader.uint32()));
                    break;
                case 2:
                    message.referenceCount = reader.uint32();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        var message = globalThis.Object.create(baseValidatorHistoricalRewards);
        message.cumulativeRewardRatio = [];
        if (object.cumulativeRewardRatio !== undefined &&
            object.cumulativeRewardRatio !== null) {
            for (var _i = 0, _a = object.cumulativeRewardRatio; _i < _a.length; _i++) {
                var e = _a[_i];
                message.cumulativeRewardRatio.push(coin_1.DecCoin.fromJSON(e));
            }
        }
        if (object.referenceCount !== undefined && object.referenceCount !== null) {
            message.referenceCount = Number(object.referenceCount);
        }
        else {
            message.referenceCount = 0;
        }
        return message;
    },
    fromPartial: function (object) {
        var message = __assign({}, baseValidatorHistoricalRewards);
        message.cumulativeRewardRatio = [];
        if (object.cumulativeRewardRatio !== undefined &&
            object.cumulativeRewardRatio !== null) {
            for (var _i = 0, _a = object.cumulativeRewardRatio; _i < _a.length; _i++) {
                var e = _a[_i];
                message.cumulativeRewardRatio.push(coin_1.DecCoin.fromPartial(e));
            }
        }
        if (object.referenceCount !== undefined && object.referenceCount !== null) {
            message.referenceCount = object.referenceCount;
        }
        else {
            message.referenceCount = 0;
        }
        return message;
    },
    toJSON: function (message) {
        var obj = {};
        if (message.cumulativeRewardRatio) {
            obj.cumulativeRewardRatio = message.cumulativeRewardRatio.map(function (e) {
                return e ? coin_1.DecCoin.toJSON(e) : undefined;
            });
        }
        else {
            obj.cumulativeRewardRatio = [];
        }
        message.referenceCount !== undefined &&
            (obj.referenceCount = message.referenceCount);
        return obj;
    }
};
var baseValidatorCurrentRewards = { period: Long.UZERO };
exports.ValidatorCurrentRewards = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        for (var _i = 0, _a = message.rewards; _i < _a.length; _i++) {
            var v = _a[_i];
            coin_1.DecCoin.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (!message.period.isZero()) {
            writer.uint32(16).uint64(message.period);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = globalThis.Object.create(baseValidatorCurrentRewards);
        message.rewards = [];
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.rewards.push(coin_1.DecCoin.decode(reader, reader.uint32()));
                    break;
                case 2:
                    message.period = reader.uint64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        var message = globalThis.Object.create(baseValidatorCurrentRewards);
        message.rewards = [];
        if (object.rewards !== undefined && object.rewards !== null) {
            for (var _i = 0, _a = object.rewards; _i < _a.length; _i++) {
                var e = _a[_i];
                message.rewards.push(coin_1.DecCoin.fromJSON(e));
            }
        }
        if (object.period !== undefined && object.period !== null) {
            message.period = Long.fromString(object.period);
        }
        else {
            message.period = Long.UZERO;
        }
        return message;
    },
    fromPartial: function (object) {
        var message = __assign({}, baseValidatorCurrentRewards);
        message.rewards = [];
        if (object.rewards !== undefined && object.rewards !== null) {
            for (var _i = 0, _a = object.rewards; _i < _a.length; _i++) {
                var e = _a[_i];
                message.rewards.push(coin_1.DecCoin.fromPartial(e));
            }
        }
        if (object.period !== undefined && object.period !== null) {
            message.period = object.period;
        }
        else {
            message.period = Long.UZERO;
        }
        return message;
    },
    toJSON: function (message) {
        var obj = {};
        if (message.rewards) {
            obj.rewards = message.rewards.map(function (e) {
                return e ? coin_1.DecCoin.toJSON(e) : undefined;
            });
        }
        else {
            obj.rewards = [];
        }
        message.period !== undefined &&
            (obj.period = (message.period || Long.UZERO).toString());
        return obj;
    }
};
var baseValidatorAccumulatedCommission = {};
exports.ValidatorAccumulatedCommission = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        for (var _i = 0, _a = message.commission; _i < _a.length; _i++) {
            var v = _a[_i];
            coin_1.DecCoin.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = globalThis.Object.create(baseValidatorAccumulatedCommission);
        message.commission = [];
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.commission.push(coin_1.DecCoin.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        var message = globalThis.Object.create(baseValidatorAccumulatedCommission);
        message.commission = [];
        if (object.commission !== undefined && object.commission !== null) {
            for (var _i = 0, _a = object.commission; _i < _a.length; _i++) {
                var e = _a[_i];
                message.commission.push(coin_1.DecCoin.fromJSON(e));
            }
        }
        return message;
    },
    fromPartial: function (object) {
        var message = __assign({}, baseValidatorAccumulatedCommission);
        message.commission = [];
        if (object.commission !== undefined && object.commission !== null) {
            for (var _i = 0, _a = object.commission; _i < _a.length; _i++) {
                var e = _a[_i];
                message.commission.push(coin_1.DecCoin.fromPartial(e));
            }
        }
        return message;
    },
    toJSON: function (message) {
        var obj = {};
        if (message.commission) {
            obj.commission = message.commission.map(function (e) {
                return e ? coin_1.DecCoin.toJSON(e) : undefined;
            });
        }
        else {
            obj.commission = [];
        }
        return obj;
    }
};
var baseValidatorOutstandingRewards = {};
exports.ValidatorOutstandingRewards = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        for (var _i = 0, _a = message.rewards; _i < _a.length; _i++) {
            var v = _a[_i];
            coin_1.DecCoin.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = globalThis.Object.create(baseValidatorOutstandingRewards);
        message.rewards = [];
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.rewards.push(coin_1.DecCoin.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        var message = globalThis.Object.create(baseValidatorOutstandingRewards);
        message.rewards = [];
        if (object.rewards !== undefined && object.rewards !== null) {
            for (var _i = 0, _a = object.rewards; _i < _a.length; _i++) {
                var e = _a[_i];
                message.rewards.push(coin_1.DecCoin.fromJSON(e));
            }
        }
        return message;
    },
    fromPartial: function (object) {
        var message = __assign({}, baseValidatorOutstandingRewards);
        message.rewards = [];
        if (object.rewards !== undefined && object.rewards !== null) {
            for (var _i = 0, _a = object.rewards; _i < _a.length; _i++) {
                var e = _a[_i];
                message.rewards.push(coin_1.DecCoin.fromPartial(e));
            }
        }
        return message;
    },
    toJSON: function (message) {
        var obj = {};
        if (message.rewards) {
            obj.rewards = message.rewards.map(function (e) {
                return e ? coin_1.DecCoin.toJSON(e) : undefined;
            });
        }
        else {
            obj.rewards = [];
        }
        return obj;
    }
};
var baseValidatorSlashEvent = {
    validatorPeriod: Long.UZERO,
    fraction: ""
};
exports.ValidatorSlashEvent = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        if (!message.validatorPeriod.isZero()) {
            writer.uint32(8).uint64(message.validatorPeriod);
        }
        if (message.fraction !== "") {
            writer.uint32(18).string(message.fraction);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = globalThis.Object.create(baseValidatorSlashEvent);
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.validatorPeriod = reader.uint64();
                    break;
                case 2:
                    message.fraction = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        var message = globalThis.Object.create(baseValidatorSlashEvent);
        if (object.validatorPeriod !== undefined &&
            object.validatorPeriod !== null) {
            message.validatorPeriod = Long.fromString(object.validatorPeriod);
        }
        else {
            message.validatorPeriod = Long.UZERO;
        }
        if (object.fraction !== undefined && object.fraction !== null) {
            message.fraction = String(object.fraction);
        }
        else {
            message.fraction = "";
        }
        return message;
    },
    fromPartial: function (object) {
        var message = __assign({}, baseValidatorSlashEvent);
        if (object.validatorPeriod !== undefined &&
            object.validatorPeriod !== null) {
            message.validatorPeriod = object.validatorPeriod;
        }
        else {
            message.validatorPeriod = Long.UZERO;
        }
        if (object.fraction !== undefined && object.fraction !== null) {
            message.fraction = object.fraction;
        }
        else {
            message.fraction = "";
        }
        return message;
    },
    toJSON: function (message) {
        var obj = {};
        message.validatorPeriod !== undefined &&
            (obj.validatorPeriod = (message.validatorPeriod || Long.UZERO).toString());
        message.fraction !== undefined && (obj.fraction = message.fraction);
        return obj;
    }
};
var baseValidatorSlashEvents = {};
exports.ValidatorSlashEvents = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        for (var _i = 0, _a = message.validatorSlashEvents; _i < _a.length; _i++) {
            var v = _a[_i];
            exports.ValidatorSlashEvent.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = globalThis.Object.create(baseValidatorSlashEvents);
        message.validatorSlashEvents = [];
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.validatorSlashEvents.push(exports.ValidatorSlashEvent.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        var message = globalThis.Object.create(baseValidatorSlashEvents);
        message.validatorSlashEvents = [];
        if (object.validatorSlashEvents !== undefined &&
            object.validatorSlashEvents !== null) {
            for (var _i = 0, _a = object.validatorSlashEvents; _i < _a.length; _i++) {
                var e = _a[_i];
                message.validatorSlashEvents.push(exports.ValidatorSlashEvent.fromJSON(e));
            }
        }
        return message;
    },
    fromPartial: function (object) {
        var message = __assign({}, baseValidatorSlashEvents);
        message.validatorSlashEvents = [];
        if (object.validatorSlashEvents !== undefined &&
            object.validatorSlashEvents !== null) {
            for (var _i = 0, _a = object.validatorSlashEvents; _i < _a.length; _i++) {
                var e = _a[_i];
                message.validatorSlashEvents.push(exports.ValidatorSlashEvent.fromPartial(e));
            }
        }
        return message;
    },
    toJSON: function (message) {
        var obj = {};
        if (message.validatorSlashEvents) {
            obj.validatorSlashEvents = message.validatorSlashEvents.map(function (e) {
                return e ? exports.ValidatorSlashEvent.toJSON(e) : undefined;
            });
        }
        else {
            obj.validatorSlashEvents = [];
        }
        return obj;
    }
};
var baseFeePool = {};
exports.FeePool = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        for (var _i = 0, _a = message.communityPool; _i < _a.length; _i++) {
            var v = _a[_i];
            coin_1.DecCoin.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = globalThis.Object.create(baseFeePool);
        message.communityPool = [];
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.communityPool.push(coin_1.DecCoin.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        var message = globalThis.Object.create(baseFeePool);
        message.communityPool = [];
        if (object.communityPool !== undefined && object.communityPool !== null) {
            for (var _i = 0, _a = object.communityPool; _i < _a.length; _i++) {
                var e = _a[_i];
                message.communityPool.push(coin_1.DecCoin.fromJSON(e));
            }
        }
        return message;
    },
    fromPartial: function (object) {
        var message = __assign({}, baseFeePool);
        message.communityPool = [];
        if (object.communityPool !== undefined && object.communityPool !== null) {
            for (var _i = 0, _a = object.communityPool; _i < _a.length; _i++) {
                var e = _a[_i];
                message.communityPool.push(coin_1.DecCoin.fromPartial(e));
            }
        }
        return message;
    },
    toJSON: function (message) {
        var obj = {};
        if (message.communityPool) {
            obj.communityPool = message.communityPool.map(function (e) {
                return e ? coin_1.DecCoin.toJSON(e) : undefined;
            });
        }
        else {
            obj.communityPool = [];
        }
        return obj;
    }
};
var baseCommunityPoolSpendProposal = {
    title: "",
    description: "",
    recipient: ""
};
exports.CommunityPoolSpendProposal = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        if (message.title !== "") {
            writer.uint32(10).string(message.title);
        }
        if (message.description !== "") {
            writer.uint32(18).string(message.description);
        }
        if (message.recipient !== "") {
            writer.uint32(26).string(message.recipient);
        }
        for (var _i = 0, _a = message.amount; _i < _a.length; _i++) {
            var v = _a[_i];
            coin_1.Coin.encode(v, writer.uint32(34).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = globalThis.Object.create(baseCommunityPoolSpendProposal);
        message.amount = [];
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.title = reader.string();
                    break;
                case 2:
                    message.description = reader.string();
                    break;
                case 3:
                    message.recipient = reader.string();
                    break;
                case 4:
                    message.amount.push(coin_1.Coin.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        var message = globalThis.Object.create(baseCommunityPoolSpendProposal);
        message.amount = [];
        if (object.title !== undefined && object.title !== null) {
            message.title = String(object.title);
        }
        else {
            message.title = "";
        }
        if (object.description !== undefined && object.description !== null) {
            message.description = String(object.description);
        }
        else {
            message.description = "";
        }
        if (object.recipient !== undefined && object.recipient !== null) {
            message.recipient = String(object.recipient);
        }
        else {
            message.recipient = "";
        }
        if (object.amount !== undefined && object.amount !== null) {
            for (var _i = 0, _a = object.amount; _i < _a.length; _i++) {
                var e = _a[_i];
                message.amount.push(coin_1.Coin.fromJSON(e));
            }
        }
        return message;
    },
    fromPartial: function (object) {
        var message = __assign({}, baseCommunityPoolSpendProposal);
        message.amount = [];
        if (object.title !== undefined && object.title !== null) {
            message.title = object.title;
        }
        else {
            message.title = "";
        }
        if (object.description !== undefined && object.description !== null) {
            message.description = object.description;
        }
        else {
            message.description = "";
        }
        if (object.recipient !== undefined && object.recipient !== null) {
            message.recipient = object.recipient;
        }
        else {
            message.recipient = "";
        }
        if (object.amount !== undefined && object.amount !== null) {
            for (var _i = 0, _a = object.amount; _i < _a.length; _i++) {
                var e = _a[_i];
                message.amount.push(coin_1.Coin.fromPartial(e));
            }
        }
        return message;
    },
    toJSON: function (message) {
        var obj = {};
        message.title !== undefined && (obj.title = message.title);
        message.description !== undefined &&
            (obj.description = message.description);
        message.recipient !== undefined && (obj.recipient = message.recipient);
        if (message.amount) {
            obj.amount = message.amount.map(function (e) { return (e ? coin_1.Coin.toJSON(e) : undefined); });
        }
        else {
            obj.amount = [];
        }
        return obj;
    }
};
var baseDelegatorStartingInfo = {
    previousPeriod: Long.UZERO,
    stake: "",
    height: Long.UZERO
};
exports.DelegatorStartingInfo = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        if (!message.previousPeriod.isZero()) {
            writer.uint32(8).uint64(message.previousPeriod);
        }
        if (message.stake !== "") {
            writer.uint32(18).string(message.stake);
        }
        if (!message.height.isZero()) {
            writer.uint32(24).uint64(message.height);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = globalThis.Object.create(baseDelegatorStartingInfo);
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.previousPeriod = reader.uint64();
                    break;
                case 2:
                    message.stake = reader.string();
                    break;
                case 3:
                    message.height = reader.uint64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        var message = globalThis.Object.create(baseDelegatorStartingInfo);
        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {
            message.previousPeriod = Long.fromString(object.previousPeriod);
        }
        else {
            message.previousPeriod = Long.UZERO;
        }
        if (object.stake !== undefined && object.stake !== null) {
            message.stake = String(object.stake);
        }
        else {
            message.stake = "";
        }
        if (object.height !== undefined && object.height !== null) {
            message.height = Long.fromString(object.height);
        }
        else {
            message.height = Long.UZERO;
        }
        return message;
    },
    fromPartial: function (object) {
        var message = __assign({}, baseDelegatorStartingInfo);
        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {
            message.previousPeriod = object.previousPeriod;
        }
        else {
            message.previousPeriod = Long.UZERO;
        }
        if (object.stake !== undefined && object.stake !== null) {
            message.stake = object.stake;
        }
        else {
            message.stake = "";
        }
        if (object.height !== undefined && object.height !== null) {
            message.height = object.height;
        }
        else {
            message.height = Long.UZERO;
        }
        return message;
    },
    toJSON: function (message) {
        var obj = {};
        message.previousPeriod !== undefined &&
            (obj.previousPeriod = (message.previousPeriod || Long.UZERO).toString());
        message.stake !== undefined && (obj.stake = message.stake);
        message.height !== undefined &&
            (obj.height = (message.height || Long.UZERO).toString());
        return obj;
    }
};
var baseDelegationDelegatorReward = { validatorAddress: "" };
exports.DelegationDelegatorReward = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        if (message.validatorAddress !== "") {
            writer.uint32(10).string(message.validatorAddress);
        }
        for (var _i = 0, _a = message.reward; _i < _a.length; _i++) {
            var v = _a[_i];
            coin_1.DecCoin.encode(v, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = globalThis.Object.create(baseDelegationDelegatorReward);
        message.reward = [];
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.validatorAddress = reader.string();
                    break;
                case 2:
                    message.reward.push(coin_1.DecCoin.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        var message = globalThis.Object.create(baseDelegationDelegatorReward);
        message.reward = [];
        if (object.validatorAddress !== undefined &&
            object.validatorAddress !== null) {
            message.validatorAddress = String(object.validatorAddress);
        }
        else {
            message.validatorAddress = "";
        }
        if (object.reward !== undefined && object.reward !== null) {
            for (var _i = 0, _a = object.reward; _i < _a.length; _i++) {
                var e = _a[_i];
                message.reward.push(coin_1.DecCoin.fromJSON(e));
            }
        }
        return message;
    },
    fromPartial: function (object) {
        var message = __assign({}, baseDelegationDelegatorReward);
        message.reward = [];
        if (object.validatorAddress !== undefined &&
            object.validatorAddress !== null) {
            message.validatorAddress = object.validatorAddress;
        }
        else {
            message.validatorAddress = "";
        }
        if (object.reward !== undefined && object.reward !== null) {
            for (var _i = 0, _a = object.reward; _i < _a.length; _i++) {
                var e = _a[_i];
                message.reward.push(coin_1.DecCoin.fromPartial(e));
            }
        }
        return message;
    },
    toJSON: function (message) {
        var obj = {};
        message.validatorAddress !== undefined &&
            (obj.validatorAddress = message.validatorAddress);
        if (message.reward) {
            obj.reward = message.reward.map(function (e) {
                return e ? coin_1.DecCoin.toJSON(e) : undefined;
            });
        }
        else {
            obj.reward = [];
        }
        return obj;
    }
};
var baseCommunityPoolSpendProposalWithDeposit = {
    title: "",
    description: "",
    recipient: "",
    amount: "",
    deposit: ""
};
exports.CommunityPoolSpendProposalWithDeposit = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        if (message.title !== "") {
            writer.uint32(10).string(message.title);
        }
        if (message.description !== "") {
            writer.uint32(18).string(message.description);
        }
        if (message.recipient !== "") {
            writer.uint32(26).string(message.recipient);
        }
        if (message.amount !== "") {
            writer.uint32(34).string(message.amount);
        }
        if (message.deposit !== "") {
            writer.uint32(42).string(message.deposit);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = globalThis.Object.create(baseCommunityPoolSpendProposalWithDeposit);
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.title = reader.string();
                    break;
                case 2:
                    message.description = reader.string();
                    break;
                case 3:
                    message.recipient = reader.string();
                    break;
                case 4:
                    message.amount = reader.string();
                    break;
                case 5:
                    message.deposit = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        var message = globalThis.Object.create(baseCommunityPoolSpendProposalWithDeposit);
        if (object.title !== undefined && object.title !== null) {
            message.title = String(object.title);
        }
        else {
            message.title = "";
        }
        if (object.description !== undefined && object.description !== null) {
            message.description = String(object.description);
        }
        else {
            message.description = "";
        }
        if (object.recipient !== undefined && object.recipient !== null) {
            message.recipient = String(object.recipient);
        }
        else {
            message.recipient = "";
        }
        if (object.amount !== undefined && object.amount !== null) {
            message.amount = String(object.amount);
        }
        else {
            message.amount = "";
        }
        if (object.deposit !== undefined && object.deposit !== null) {
            message.deposit = String(object.deposit);
        }
        else {
            message.deposit = "";
        }
        return message;
    },
    fromPartial: function (object) {
        var message = __assign({}, baseCommunityPoolSpendProposalWithDeposit);
        if (object.title !== undefined && object.title !== null) {
            message.title = object.title;
        }
        else {
            message.title = "";
        }
        if (object.description !== undefined && object.description !== null) {
            message.description = object.description;
        }
        else {
            message.description = "";
        }
        if (object.recipient !== undefined && object.recipient !== null) {
            message.recipient = object.recipient;
        }
        else {
            message.recipient = "";
        }
        if (object.amount !== undefined && object.amount !== null) {
            message.amount = object.amount;
        }
        else {
            message.amount = "";
        }
        if (object.deposit !== undefined && object.deposit !== null) {
            message.deposit = object.deposit;
        }
        else {
            message.deposit = "";
        }
        return message;
    },
    toJSON: function (message) {
        var obj = {};
        message.title !== undefined && (obj.title = message.title);
        message.description !== undefined &&
            (obj.description = message.description);
        message.recipient !== undefined && (obj.recipient = message.recipient);
        message.amount !== undefined && (obj.amount = message.amount);
        message.deposit !== undefined && (obj.deposit = message.deposit);
        return obj;
    }
};
var globalThis = (function () {
    if (typeof globalThis !== "undefined")
        return globalThis;
    if (typeof self !== "undefined")
        return self;
    if (typeof window !== "undefined")
        return window;
    if (typeof global !== "undefined")
        return global;
    throw "Unable to locate global object";
})();
