"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
exports.__esModule = true;
exports.QueryClientImpl = exports.QueryCommunityPoolResponse = exports.QueryCommunityPoolRequest = exports.QueryDelegatorWithdrawAddressResponse = exports.QueryDelegatorWithdrawAddressRequest = exports.QueryDelegatorValidatorsResponse = exports.QueryDelegatorValidatorsRequest = exports.QueryDelegationTotalRewardsResponse = exports.QueryDelegationTotalRewardsRequest = exports.QueryDelegationRewardsResponse = exports.QueryDelegationRewardsRequest = exports.QueryValidatorSlashesResponse = exports.QueryValidatorSlashesRequest = exports.QueryValidatorCommissionResponse = exports.QueryValidatorCommissionRequest = exports.QueryValidatorOutstandingRewardsResponse = exports.QueryValidatorOutstandingRewardsRequest = exports.QueryParamsResponse = exports.QueryParamsRequest = exports.protobufPackage = void 0;
/* eslint-disable */
var distribution_1 = require("../../../cosmos/distribution/v1beta1/distribution");
var Long = require("long");
var pagination_1 = require("../../../cosmos/base/query/v1beta1/pagination");
var minimal_1 = require("protobufjs/minimal");
var coin_1 = require("../../../cosmos/base/v1beta1/coin");
exports.protobufPackage = "cosmos.distribution.v1beta1";
var baseQueryParamsRequest = {};
exports.QueryParamsRequest = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = globalThis.Object.create(baseQueryParamsRequest);
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        var message = globalThis.Object.create(baseQueryParamsRequest);
        return message;
    },
    fromPartial: function (_) {
        var message = __assign({}, baseQueryParamsRequest);
        return message;
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    }
};
var baseQueryParamsResponse = {};
exports.QueryParamsResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        if (message.params !== undefined) {
            distribution_1.Params.encode(message.params, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = globalThis.Object.create(baseQueryParamsResponse);
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.params = distribution_1.Params.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        var message = globalThis.Object.create(baseQueryParamsResponse);
        if (object.params !== undefined && object.params !== null) {
            message.params = distribution_1.Params.fromJSON(object.params);
        }
        else {
            message.params = undefined;
        }
        return message;
    },
    fromPartial: function (object) {
        var message = __assign({}, baseQueryParamsResponse);
        if (object.params !== undefined && object.params !== null) {
            message.params = distribution_1.Params.fromPartial(object.params);
        }
        else {
            message.params = undefined;
        }
        return message;
    },
    toJSON: function (message) {
        var obj = {};
        message.params !== undefined &&
            (obj.params = message.params ? distribution_1.Params.toJSON(message.params) : undefined);
        return obj;
    }
};
var baseQueryValidatorOutstandingRewardsRequest = {
    validatorAddress: ""
};
exports.QueryValidatorOutstandingRewardsRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        if (message.validatorAddress !== "") {
            writer.uint32(10).string(message.validatorAddress);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = globalThis.Object.create(baseQueryValidatorOutstandingRewardsRequest);
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.validatorAddress = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        var message = globalThis.Object.create(baseQueryValidatorOutstandingRewardsRequest);
        if (object.validatorAddress !== undefined &&
            object.validatorAddress !== null) {
            message.validatorAddress = String(object.validatorAddress);
        }
        else {
            message.validatorAddress = "";
        }
        return message;
    },
    fromPartial: function (object) {
        var message = __assign({}, baseQueryValidatorOutstandingRewardsRequest);
        if (object.validatorAddress !== undefined &&
            object.validatorAddress !== null) {
            message.validatorAddress = object.validatorAddress;
        }
        else {
            message.validatorAddress = "";
        }
        return message;
    },
    toJSON: function (message) {
        var obj = {};
        message.validatorAddress !== undefined &&
            (obj.validatorAddress = message.validatorAddress);
        return obj;
    }
};
var baseQueryValidatorOutstandingRewardsResponse = {};
exports.QueryValidatorOutstandingRewardsResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        if (message.rewards !== undefined) {
            distribution_1.ValidatorOutstandingRewards.encode(message.rewards, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = globalThis.Object.create(baseQueryValidatorOutstandingRewardsResponse);
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.rewards = distribution_1.ValidatorOutstandingRewards.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        var message = globalThis.Object.create(baseQueryValidatorOutstandingRewardsResponse);
        if (object.rewards !== undefined && object.rewards !== null) {
            message.rewards = distribution_1.ValidatorOutstandingRewards.fromJSON(object.rewards);
        }
        else {
            message.rewards = undefined;
        }
        return message;
    },
    fromPartial: function (object) {
        var message = __assign({}, baseQueryValidatorOutstandingRewardsResponse);
        if (object.rewards !== undefined && object.rewards !== null) {
            message.rewards = distribution_1.ValidatorOutstandingRewards.fromPartial(object.rewards);
        }
        else {
            message.rewards = undefined;
        }
        return message;
    },
    toJSON: function (message) {
        var obj = {};
        message.rewards !== undefined &&
            (obj.rewards = message.rewards
                ? distribution_1.ValidatorOutstandingRewards.toJSON(message.rewards)
                : undefined);
        return obj;
    }
};
var baseQueryValidatorCommissionRequest = { validatorAddress: "" };
exports.QueryValidatorCommissionRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        if (message.validatorAddress !== "") {
            writer.uint32(10).string(message.validatorAddress);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = globalThis.Object.create(baseQueryValidatorCommissionRequest);
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.validatorAddress = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        var message = globalThis.Object.create(baseQueryValidatorCommissionRequest);
        if (object.validatorAddress !== undefined &&
            object.validatorAddress !== null) {
            message.validatorAddress = String(object.validatorAddress);
        }
        else {
            message.validatorAddress = "";
        }
        return message;
    },
    fromPartial: function (object) {
        var message = __assign({}, baseQueryValidatorCommissionRequest);
        if (object.validatorAddress !== undefined &&
            object.validatorAddress !== null) {
            message.validatorAddress = object.validatorAddress;
        }
        else {
            message.validatorAddress = "";
        }
        return message;
    },
    toJSON: function (message) {
        var obj = {};
        message.validatorAddress !== undefined &&
            (obj.validatorAddress = message.validatorAddress);
        return obj;
    }
};
var baseQueryValidatorCommissionResponse = {};
exports.QueryValidatorCommissionResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        if (message.commission !== undefined) {
            distribution_1.ValidatorAccumulatedCommission.encode(message.commission, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = globalThis.Object.create(baseQueryValidatorCommissionResponse);
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.commission = distribution_1.ValidatorAccumulatedCommission.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        var message = globalThis.Object.create(baseQueryValidatorCommissionResponse);
        if (object.commission !== undefined && object.commission !== null) {
            message.commission = distribution_1.ValidatorAccumulatedCommission.fromJSON(object.commission);
        }
        else {
            message.commission = undefined;
        }
        return message;
    },
    fromPartial: function (object) {
        var message = __assign({}, baseQueryValidatorCommissionResponse);
        if (object.commission !== undefined && object.commission !== null) {
            message.commission = distribution_1.ValidatorAccumulatedCommission.fromPartial(object.commission);
        }
        else {
            message.commission = undefined;
        }
        return message;
    },
    toJSON: function (message) {
        var obj = {};
        message.commission !== undefined &&
            (obj.commission = message.commission
                ? distribution_1.ValidatorAccumulatedCommission.toJSON(message.commission)
                : undefined);
        return obj;
    }
};
var baseQueryValidatorSlashesRequest = {
    validatorAddress: "",
    startingHeight: Long.UZERO,
    endingHeight: Long.UZERO
};
exports.QueryValidatorSlashesRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        if (message.validatorAddress !== "") {
            writer.uint32(10).string(message.validatorAddress);
        }
        if (!message.startingHeight.isZero()) {
            writer.uint32(16).uint64(message.startingHeight);
        }
        if (!message.endingHeight.isZero()) {
            writer.uint32(24).uint64(message.endingHeight);
        }
        if (message.pagination !== undefined) {
            pagination_1.PageRequest.encode(message.pagination, writer.uint32(34).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = globalThis.Object.create(baseQueryValidatorSlashesRequest);
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.validatorAddress = reader.string();
                    break;
                case 2:
                    message.startingHeight = reader.uint64();
                    break;
                case 3:
                    message.endingHeight = reader.uint64();
                    break;
                case 4:
                    message.pagination = pagination_1.PageRequest.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        var message = globalThis.Object.create(baseQueryValidatorSlashesRequest);
        if (object.validatorAddress !== undefined &&
            object.validatorAddress !== null) {
            message.validatorAddress = String(object.validatorAddress);
        }
        else {
            message.validatorAddress = "";
        }
        if (object.startingHeight !== undefined && object.startingHeight !== null) {
            message.startingHeight = Long.fromString(object.startingHeight);
        }
        else {
            message.startingHeight = Long.UZERO;
        }
        if (object.endingHeight !== undefined && object.endingHeight !== null) {
            message.endingHeight = Long.fromString(object.endingHeight);
        }
        else {
            message.endingHeight = Long.UZERO;
        }
        if (object.pagination !== undefined && object.pagination !== null) {
            message.pagination = pagination_1.PageRequest.fromJSON(object.pagination);
        }
        else {
            message.pagination = undefined;
        }
        return message;
    },
    fromPartial: function (object) {
        var message = __assign({}, baseQueryValidatorSlashesRequest);
        if (object.validatorAddress !== undefined &&
            object.validatorAddress !== null) {
            message.validatorAddress = object.validatorAddress;
        }
        else {
            message.validatorAddress = "";
        }
        if (object.startingHeight !== undefined && object.startingHeight !== null) {
            message.startingHeight = object.startingHeight;
        }
        else {
            message.startingHeight = Long.UZERO;
        }
        if (object.endingHeight !== undefined && object.endingHeight !== null) {
            message.endingHeight = object.endingHeight;
        }
        else {
            message.endingHeight = Long.UZERO;
        }
        if (object.pagination !== undefined && object.pagination !== null) {
            message.pagination = pagination_1.PageRequest.fromPartial(object.pagination);
        }
        else {
            message.pagination = undefined;
        }
        return message;
    },
    toJSON: function (message) {
        var obj = {};
        message.validatorAddress !== undefined &&
            (obj.validatorAddress = message.validatorAddress);
        message.startingHeight !== undefined &&
            (obj.startingHeight = (message.startingHeight || Long.UZERO).toString());
        message.endingHeight !== undefined &&
            (obj.endingHeight = (message.endingHeight || Long.UZERO).toString());
        message.pagination !== undefined &&
            (obj.pagination = message.pagination
                ? pagination_1.PageRequest.toJSON(message.pagination)
                : undefined);
        return obj;
    }
};
var baseQueryValidatorSlashesResponse = {};
exports.QueryValidatorSlashesResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        for (var _i = 0, _a = message.slashes; _i < _a.length; _i++) {
            var v = _a[_i];
            distribution_1.ValidatorSlashEvent.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.pagination !== undefined) {
            pagination_1.PageResponse.encode(message.pagination, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = globalThis.Object.create(baseQueryValidatorSlashesResponse);
        message.slashes = [];
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.slashes.push(distribution_1.ValidatorSlashEvent.decode(reader, reader.uint32()));
                    break;
                case 2:
                    message.pagination = pagination_1.PageResponse.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        var message = globalThis.Object.create(baseQueryValidatorSlashesResponse);
        message.slashes = [];
        if (object.slashes !== undefined && object.slashes !== null) {
            for (var _i = 0, _a = object.slashes; _i < _a.length; _i++) {
                var e = _a[_i];
                message.slashes.push(distribution_1.ValidatorSlashEvent.fromJSON(e));
            }
        }
        if (object.pagination !== undefined && object.pagination !== null) {
            message.pagination = pagination_1.PageResponse.fromJSON(object.pagination);
        }
        else {
            message.pagination = undefined;
        }
        return message;
    },
    fromPartial: function (object) {
        var message = __assign({}, baseQueryValidatorSlashesResponse);
        message.slashes = [];
        if (object.slashes !== undefined && object.slashes !== null) {
            for (var _i = 0, _a = object.slashes; _i < _a.length; _i++) {
                var e = _a[_i];
                message.slashes.push(distribution_1.ValidatorSlashEvent.fromPartial(e));
            }
        }
        if (object.pagination !== undefined && object.pagination !== null) {
            message.pagination = pagination_1.PageResponse.fromPartial(object.pagination);
        }
        else {
            message.pagination = undefined;
        }
        return message;
    },
    toJSON: function (message) {
        var obj = {};
        if (message.slashes) {
            obj.slashes = message.slashes.map(function (e) {
                return e ? distribution_1.ValidatorSlashEvent.toJSON(e) : undefined;
            });
        }
        else {
            obj.slashes = [];
        }
        message.pagination !== undefined &&
            (obj.pagination = message.pagination
                ? pagination_1.PageResponse.toJSON(message.pagination)
                : undefined);
        return obj;
    }
};
var baseQueryDelegationRewardsRequest = {
    delegatorAddress: "",
    validatorAddress: ""
};
exports.QueryDelegationRewardsRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        if (message.delegatorAddress !== "") {
            writer.uint32(10).string(message.delegatorAddress);
        }
        if (message.validatorAddress !== "") {
            writer.uint32(18).string(message.validatorAddress);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = globalThis.Object.create(baseQueryDelegationRewardsRequest);
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.delegatorAddress = reader.string();
                    break;
                case 2:
                    message.validatorAddress = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        var message = globalThis.Object.create(baseQueryDelegationRewardsRequest);
        if (object.delegatorAddress !== undefined &&
            object.delegatorAddress !== null) {
            message.delegatorAddress = String(object.delegatorAddress);
        }
        else {
            message.delegatorAddress = "";
        }
        if (object.validatorAddress !== undefined &&
            object.validatorAddress !== null) {
            message.validatorAddress = String(object.validatorAddress);
        }
        else {
            message.validatorAddress = "";
        }
        return message;
    },
    fromPartial: function (object) {
        var message = __assign({}, baseQueryDelegationRewardsRequest);
        if (object.delegatorAddress !== undefined &&
            object.delegatorAddress !== null) {
            message.delegatorAddress = object.delegatorAddress;
        }
        else {
            message.delegatorAddress = "";
        }
        if (object.validatorAddress !== undefined &&
            object.validatorAddress !== null) {
            message.validatorAddress = object.validatorAddress;
        }
        else {
            message.validatorAddress = "";
        }
        return message;
    },
    toJSON: function (message) {
        var obj = {};
        message.delegatorAddress !== undefined &&
            (obj.delegatorAddress = message.delegatorAddress);
        message.validatorAddress !== undefined &&
            (obj.validatorAddress = message.validatorAddress);
        return obj;
    }
};
var baseQueryDelegationRewardsResponse = {};
exports.QueryDelegationRewardsResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        for (var _i = 0, _a = message.rewards; _i < _a.length; _i++) {
            var v = _a[_i];
            coin_1.DecCoin.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = globalThis.Object.create(baseQueryDelegationRewardsResponse);
        message.rewards = [];
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.rewards.push(coin_1.DecCoin.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        var message = globalThis.Object.create(baseQueryDelegationRewardsResponse);
        message.rewards = [];
        if (object.rewards !== undefined && object.rewards !== null) {
            for (var _i = 0, _a = object.rewards; _i < _a.length; _i++) {
                var e = _a[_i];
                message.rewards.push(coin_1.DecCoin.fromJSON(e));
            }
        }
        return message;
    },
    fromPartial: function (object) {
        var message = __assign({}, baseQueryDelegationRewardsResponse);
        message.rewards = [];
        if (object.rewards !== undefined && object.rewards !== null) {
            for (var _i = 0, _a = object.rewards; _i < _a.length; _i++) {
                var e = _a[_i];
                message.rewards.push(coin_1.DecCoin.fromPartial(e));
            }
        }
        return message;
    },
    toJSON: function (message) {
        var obj = {};
        if (message.rewards) {
            obj.rewards = message.rewards.map(function (e) {
                return e ? coin_1.DecCoin.toJSON(e) : undefined;
            });
        }
        else {
            obj.rewards = [];
        }
        return obj;
    }
};
var baseQueryDelegationTotalRewardsRequest = { delegatorAddress: "" };
exports.QueryDelegationTotalRewardsRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        if (message.delegatorAddress !== "") {
            writer.uint32(10).string(message.delegatorAddress);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = globalThis.Object.create(baseQueryDelegationTotalRewardsRequest);
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.delegatorAddress = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        var message = globalThis.Object.create(baseQueryDelegationTotalRewardsRequest);
        if (object.delegatorAddress !== undefined &&
            object.delegatorAddress !== null) {
            message.delegatorAddress = String(object.delegatorAddress);
        }
        else {
            message.delegatorAddress = "";
        }
        return message;
    },
    fromPartial: function (object) {
        var message = __assign({}, baseQueryDelegationTotalRewardsRequest);
        if (object.delegatorAddress !== undefined &&
            object.delegatorAddress !== null) {
            message.delegatorAddress = object.delegatorAddress;
        }
        else {
            message.delegatorAddress = "";
        }
        return message;
    },
    toJSON: function (message) {
        var obj = {};
        message.delegatorAddress !== undefined &&
            (obj.delegatorAddress = message.delegatorAddress);
        return obj;
    }
};
var baseQueryDelegationTotalRewardsResponse = {};
exports.QueryDelegationTotalRewardsResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        for (var _i = 0, _a = message.rewards; _i < _a.length; _i++) {
            var v = _a[_i];
            distribution_1.DelegationDelegatorReward.encode(v, writer.uint32(10).fork()).ldelim();
        }
        for (var _b = 0, _c = message.total; _b < _c.length; _b++) {
            var v = _c[_b];
            coin_1.DecCoin.encode(v, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = globalThis.Object.create(baseQueryDelegationTotalRewardsResponse);
        message.rewards = [];
        message.total = [];
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.rewards.push(distribution_1.DelegationDelegatorReward.decode(reader, reader.uint32()));
                    break;
                case 2:
                    message.total.push(coin_1.DecCoin.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        var message = globalThis.Object.create(baseQueryDelegationTotalRewardsResponse);
        message.rewards = [];
        message.total = [];
        if (object.rewards !== undefined && object.rewards !== null) {
            for (var _i = 0, _a = object.rewards; _i < _a.length; _i++) {
                var e = _a[_i];
                message.rewards.push(distribution_1.DelegationDelegatorReward.fromJSON(e));
            }
        }
        if (object.total !== undefined && object.total !== null) {
            for (var _b = 0, _c = object.total; _b < _c.length; _b++) {
                var e = _c[_b];
                message.total.push(coin_1.DecCoin.fromJSON(e));
            }
        }
        return message;
    },
    fromPartial: function (object) {
        var message = __assign({}, baseQueryDelegationTotalRewardsResponse);
        message.rewards = [];
        message.total = [];
        if (object.rewards !== undefined && object.rewards !== null) {
            for (var _i = 0, _a = object.rewards; _i < _a.length; _i++) {
                var e = _a[_i];
                message.rewards.push(distribution_1.DelegationDelegatorReward.fromPartial(e));
            }
        }
        if (object.total !== undefined && object.total !== null) {
            for (var _b = 0, _c = object.total; _b < _c.length; _b++) {
                var e = _c[_b];
                message.total.push(coin_1.DecCoin.fromPartial(e));
            }
        }
        return message;
    },
    toJSON: function (message) {
        var obj = {};
        if (message.rewards) {
            obj.rewards = message.rewards.map(function (e) {
                return e ? distribution_1.DelegationDelegatorReward.toJSON(e) : undefined;
            });
        }
        else {
            obj.rewards = [];
        }
        if (message.total) {
            obj.total = message.total.map(function (e) { return (e ? coin_1.DecCoin.toJSON(e) : undefined); });
        }
        else {
            obj.total = [];
        }
        return obj;
    }
};
var baseQueryDelegatorValidatorsRequest = { delegatorAddress: "" };
exports.QueryDelegatorValidatorsRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        if (message.delegatorAddress !== "") {
            writer.uint32(10).string(message.delegatorAddress);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = globalThis.Object.create(baseQueryDelegatorValidatorsRequest);
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.delegatorAddress = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        var message = globalThis.Object.create(baseQueryDelegatorValidatorsRequest);
        if (object.delegatorAddress !== undefined &&
            object.delegatorAddress !== null) {
            message.delegatorAddress = String(object.delegatorAddress);
        }
        else {
            message.delegatorAddress = "";
        }
        return message;
    },
    fromPartial: function (object) {
        var message = __assign({}, baseQueryDelegatorValidatorsRequest);
        if (object.delegatorAddress !== undefined &&
            object.delegatorAddress !== null) {
            message.delegatorAddress = object.delegatorAddress;
        }
        else {
            message.delegatorAddress = "";
        }
        return message;
    },
    toJSON: function (message) {
        var obj = {};
        message.delegatorAddress !== undefined &&
            (obj.delegatorAddress = message.delegatorAddress);
        return obj;
    }
};
var baseQueryDelegatorValidatorsResponse = { validators: "" };
exports.QueryDelegatorValidatorsResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        for (var _i = 0, _a = message.validators; _i < _a.length; _i++) {
            var v = _a[_i];
            writer.uint32(10).string(v);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = globalThis.Object.create(baseQueryDelegatorValidatorsResponse);
        message.validators = [];
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.validators.push(reader.string());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        var message = globalThis.Object.create(baseQueryDelegatorValidatorsResponse);
        message.validators = [];
        if (object.validators !== undefined && object.validators !== null) {
            for (var _i = 0, _a = object.validators; _i < _a.length; _i++) {
                var e = _a[_i];
                message.validators.push(String(e));
            }
        }
        return message;
    },
    fromPartial: function (object) {
        var message = __assign({}, baseQueryDelegatorValidatorsResponse);
        message.validators = [];
        if (object.validators !== undefined && object.validators !== null) {
            for (var _i = 0, _a = object.validators; _i < _a.length; _i++) {
                var e = _a[_i];
                message.validators.push(e);
            }
        }
        return message;
    },
    toJSON: function (message) {
        var obj = {};
        if (message.validators) {
            obj.validators = message.validators.map(function (e) { return e; });
        }
        else {
            obj.validators = [];
        }
        return obj;
    }
};
var baseQueryDelegatorWithdrawAddressRequest = {
    delegatorAddress: ""
};
exports.QueryDelegatorWithdrawAddressRequest = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        if (message.delegatorAddress !== "") {
            writer.uint32(10).string(message.delegatorAddress);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = globalThis.Object.create(baseQueryDelegatorWithdrawAddressRequest);
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.delegatorAddress = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        var message = globalThis.Object.create(baseQueryDelegatorWithdrawAddressRequest);
        if (object.delegatorAddress !== undefined &&
            object.delegatorAddress !== null) {
            message.delegatorAddress = String(object.delegatorAddress);
        }
        else {
            message.delegatorAddress = "";
        }
        return message;
    },
    fromPartial: function (object) {
        var message = __assign({}, baseQueryDelegatorWithdrawAddressRequest);
        if (object.delegatorAddress !== undefined &&
            object.delegatorAddress !== null) {
            message.delegatorAddress = object.delegatorAddress;
        }
        else {
            message.delegatorAddress = "";
        }
        return message;
    },
    toJSON: function (message) {
        var obj = {};
        message.delegatorAddress !== undefined &&
            (obj.delegatorAddress = message.delegatorAddress);
        return obj;
    }
};
var baseQueryDelegatorWithdrawAddressResponse = {
    withdrawAddress: ""
};
exports.QueryDelegatorWithdrawAddressResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        if (message.withdrawAddress !== "") {
            writer.uint32(10).string(message.withdrawAddress);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = globalThis.Object.create(baseQueryDelegatorWithdrawAddressResponse);
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.withdrawAddress = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        var message = globalThis.Object.create(baseQueryDelegatorWithdrawAddressResponse);
        if (object.withdrawAddress !== undefined &&
            object.withdrawAddress !== null) {
            message.withdrawAddress = String(object.withdrawAddress);
        }
        else {
            message.withdrawAddress = "";
        }
        return message;
    },
    fromPartial: function (object) {
        var message = __assign({}, baseQueryDelegatorWithdrawAddressResponse);
        if (object.withdrawAddress !== undefined &&
            object.withdrawAddress !== null) {
            message.withdrawAddress = object.withdrawAddress;
        }
        else {
            message.withdrawAddress = "";
        }
        return message;
    },
    toJSON: function (message) {
        var obj = {};
        message.withdrawAddress !== undefined &&
            (obj.withdrawAddress = message.withdrawAddress);
        return obj;
    }
};
var baseQueryCommunityPoolRequest = {};
exports.QueryCommunityPoolRequest = {
    encode: function (_, writer) {
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = globalThis.Object.create(baseQueryCommunityPoolRequest);
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (_) {
        var message = globalThis.Object.create(baseQueryCommunityPoolRequest);
        return message;
    },
    fromPartial: function (_) {
        var message = __assign({}, baseQueryCommunityPoolRequest);
        return message;
    },
    toJSON: function (_) {
        var obj = {};
        return obj;
    }
};
var baseQueryCommunityPoolResponse = {};
exports.QueryCommunityPoolResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        for (var _i = 0, _a = message.pool; _i < _a.length; _i++) {
            var v = _a[_i];
            coin_1.DecCoin.encode(v, writer.uint32(10).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = globalThis.Object.create(baseQueryCommunityPoolResponse);
        message.pool = [];
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.pool.push(coin_1.DecCoin.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        var message = globalThis.Object.create(baseQueryCommunityPoolResponse);
        message.pool = [];
        if (object.pool !== undefined && object.pool !== null) {
            for (var _i = 0, _a = object.pool; _i < _a.length; _i++) {
                var e = _a[_i];
                message.pool.push(coin_1.DecCoin.fromJSON(e));
            }
        }
        return message;
    },
    fromPartial: function (object) {
        var message = __assign({}, baseQueryCommunityPoolResponse);
        message.pool = [];
        if (object.pool !== undefined && object.pool !== null) {
            for (var _i = 0, _a = object.pool; _i < _a.length; _i++) {
                var e = _a[_i];
                message.pool.push(coin_1.DecCoin.fromPartial(e));
            }
        }
        return message;
    },
    toJSON: function (message) {
        var obj = {};
        if (message.pool) {
            obj.pool = message.pool.map(function (e) { return (e ? coin_1.DecCoin.toJSON(e) : undefined); });
        }
        else {
            obj.pool = [];
        }
        return obj;
    }
};
var QueryClientImpl = /** @class */ (function () {
    function QueryClientImpl(rpc) {
        this.rpc = rpc;
    }
    QueryClientImpl.prototype.Params = function (request) {
        var data = exports.QueryParamsRequest.encode(request).finish();
        var promise = this.rpc.request("cosmos.distribution.v1beta1.Query", "Params", data);
        return promise.then(function (data) { return exports.QueryParamsResponse.decode(new minimal_1.Reader(data)); });
    };
    QueryClientImpl.prototype.ValidatorOutstandingRewards = function (request) {
        var data = exports.QueryValidatorOutstandingRewardsRequest.encode(request).finish();
        var promise = this.rpc.request("cosmos.distribution.v1beta1.Query", "ValidatorOutstandingRewards", data);
        return promise.then(function (data) {
            return exports.QueryValidatorOutstandingRewardsResponse.decode(new minimal_1.Reader(data));
        });
    };
    QueryClientImpl.prototype.ValidatorCommission = function (request) {
        var data = exports.QueryValidatorCommissionRequest.encode(request).finish();
        var promise = this.rpc.request("cosmos.distribution.v1beta1.Query", "ValidatorCommission", data);
        return promise.then(function (data) {
            return exports.QueryValidatorCommissionResponse.decode(new minimal_1.Reader(data));
        });
    };
    QueryClientImpl.prototype.ValidatorSlashes = function (request) {
        var data = exports.QueryValidatorSlashesRequest.encode(request).finish();
        var promise = this.rpc.request("cosmos.distribution.v1beta1.Query", "ValidatorSlashes", data);
        return promise.then(function (data) {
            return exports.QueryValidatorSlashesResponse.decode(new minimal_1.Reader(data));
        });
    };
    QueryClientImpl.prototype.DelegationRewards = function (request) {
        var data = exports.QueryDelegationRewardsRequest.encode(request).finish();
        var promise = this.rpc.request("cosmos.distribution.v1beta1.Query", "DelegationRewards", data);
        return promise.then(function (data) {
            return exports.QueryDelegationRewardsResponse.decode(new minimal_1.Reader(data));
        });
    };
    QueryClientImpl.prototype.DelegationTotalRewards = function (request) {
        var data = exports.QueryDelegationTotalRewardsRequest.encode(request).finish();
        var promise = this.rpc.request("cosmos.distribution.v1beta1.Query", "DelegationTotalRewards", data);
        return promise.then(function (data) {
            return exports.QueryDelegationTotalRewardsResponse.decode(new minimal_1.Reader(data));
        });
    };
    QueryClientImpl.prototype.DelegatorValidators = function (request) {
        var data = exports.QueryDelegatorValidatorsRequest.encode(request).finish();
        var promise = this.rpc.request("cosmos.distribution.v1beta1.Query", "DelegatorValidators", data);
        return promise.then(function (data) {
            return exports.QueryDelegatorValidatorsResponse.decode(new minimal_1.Reader(data));
        });
    };
    QueryClientImpl.prototype.DelegatorWithdrawAddress = function (request) {
        var data = exports.QueryDelegatorWithdrawAddressRequest.encode(request).finish();
        var promise = this.rpc.request("cosmos.distribution.v1beta1.Query", "DelegatorWithdrawAddress", data);
        return promise.then(function (data) {
            return exports.QueryDelegatorWithdrawAddressResponse.decode(new minimal_1.Reader(data));
        });
    };
    QueryClientImpl.prototype.CommunityPool = function (request) {
        var data = exports.QueryCommunityPoolRequest.encode(request).finish();
        var promise = this.rpc.request("cosmos.distribution.v1beta1.Query", "CommunityPool", data);
        return promise.then(function (data) {
            return exports.QueryCommunityPoolResponse.decode(new minimal_1.Reader(data));
        });
    };
    return QueryClientImpl;
}());
exports.QueryClientImpl = QueryClientImpl;
var globalThis = (function () {
    if (typeof globalThis !== "undefined")
        return globalThis;
    if (typeof self !== "undefined")
        return self;
    if (typeof window !== "undefined")
        return window;
    if (typeof global !== "undefined")
        return global;
    throw "Unable to locate global object";
})();
