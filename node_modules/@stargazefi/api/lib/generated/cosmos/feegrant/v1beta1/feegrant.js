"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
exports.__esModule = true;
exports.FeeAllowanceGrant = exports.ExpiresAt = exports.Duration = exports.AllowedMsgFeeAllowance = exports.PeriodicFeeAllowance = exports.BasicFeeAllowance = exports.protobufPackage = void 0;
/* eslint-disable */
var any_1 = require("../../../google/protobuf/any");
var timestamp_1 = require("../../../google/protobuf/timestamp");
var Long = require("long");
var minimal_1 = require("protobufjs/minimal");
var coin_1 = require("../../../cosmos/base/v1beta1/coin");
var duration_1 = require("../../../google/protobuf/duration");
exports.protobufPackage = "cosmos.feegrant.v1beta1";
var baseBasicFeeAllowance = {};
exports.BasicFeeAllowance = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        for (var _i = 0, _a = message.spendLimit; _i < _a.length; _i++) {
            var v = _a[_i];
            coin_1.Coin.encode(v, writer.uint32(10).fork()).ldelim();
        }
        if (message.expiration !== undefined) {
            exports.ExpiresAt.encode(message.expiration, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = globalThis.Object.create(baseBasicFeeAllowance);
        message.spendLimit = [];
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.spendLimit.push(coin_1.Coin.decode(reader, reader.uint32()));
                    break;
                case 2:
                    message.expiration = exports.ExpiresAt.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        var message = globalThis.Object.create(baseBasicFeeAllowance);
        message.spendLimit = [];
        if (object.spendLimit !== undefined && object.spendLimit !== null) {
            for (var _i = 0, _a = object.spendLimit; _i < _a.length; _i++) {
                var e = _a[_i];
                message.spendLimit.push(coin_1.Coin.fromJSON(e));
            }
        }
        if (object.expiration !== undefined && object.expiration !== null) {
            message.expiration = exports.ExpiresAt.fromJSON(object.expiration);
        }
        else {
            message.expiration = undefined;
        }
        return message;
    },
    fromPartial: function (object) {
        var message = __assign({}, baseBasicFeeAllowance);
        message.spendLimit = [];
        if (object.spendLimit !== undefined && object.spendLimit !== null) {
            for (var _i = 0, _a = object.spendLimit; _i < _a.length; _i++) {
                var e = _a[_i];
                message.spendLimit.push(coin_1.Coin.fromPartial(e));
            }
        }
        if (object.expiration !== undefined && object.expiration !== null) {
            message.expiration = exports.ExpiresAt.fromPartial(object.expiration);
        }
        else {
            message.expiration = undefined;
        }
        return message;
    },
    toJSON: function (message) {
        var obj = {};
        if (message.spendLimit) {
            obj.spendLimit = message.spendLimit.map(function (e) {
                return e ? coin_1.Coin.toJSON(e) : undefined;
            });
        }
        else {
            obj.spendLimit = [];
        }
        message.expiration !== undefined &&
            (obj.expiration = message.expiration
                ? exports.ExpiresAt.toJSON(message.expiration)
                : undefined);
        return obj;
    }
};
var basePeriodicFeeAllowance = {};
exports.PeriodicFeeAllowance = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        if (message.basic !== undefined) {
            exports.BasicFeeAllowance.encode(message.basic, writer.uint32(10).fork()).ldelim();
        }
        if (message.period !== undefined) {
            exports.Duration.encode(message.period, writer.uint32(18).fork()).ldelim();
        }
        for (var _i = 0, _a = message.periodSpendLimit; _i < _a.length; _i++) {
            var v = _a[_i];
            coin_1.Coin.encode(v, writer.uint32(26).fork()).ldelim();
        }
        for (var _b = 0, _c = message.periodCanSpend; _b < _c.length; _b++) {
            var v = _c[_b];
            coin_1.Coin.encode(v, writer.uint32(34).fork()).ldelim();
        }
        if (message.periodReset !== undefined) {
            exports.ExpiresAt.encode(message.periodReset, writer.uint32(42).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = globalThis.Object.create(basePeriodicFeeAllowance);
        message.periodSpendLimit = [];
        message.periodCanSpend = [];
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.basic = exports.BasicFeeAllowance.decode(reader, reader.uint32());
                    break;
                case 2:
                    message.period = exports.Duration.decode(reader, reader.uint32());
                    break;
                case 3:
                    message.periodSpendLimit.push(coin_1.Coin.decode(reader, reader.uint32()));
                    break;
                case 4:
                    message.periodCanSpend.push(coin_1.Coin.decode(reader, reader.uint32()));
                    break;
                case 5:
                    message.periodReset = exports.ExpiresAt.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        var message = globalThis.Object.create(basePeriodicFeeAllowance);
        message.periodSpendLimit = [];
        message.periodCanSpend = [];
        if (object.basic !== undefined && object.basic !== null) {
            message.basic = exports.BasicFeeAllowance.fromJSON(object.basic);
        }
        else {
            message.basic = undefined;
        }
        if (object.period !== undefined && object.period !== null) {
            message.period = exports.Duration.fromJSON(object.period);
        }
        else {
            message.period = undefined;
        }
        if (object.periodSpendLimit !== undefined &&
            object.periodSpendLimit !== null) {
            for (var _i = 0, _a = object.periodSpendLimit; _i < _a.length; _i++) {
                var e = _a[_i];
                message.periodSpendLimit.push(coin_1.Coin.fromJSON(e));
            }
        }
        if (object.periodCanSpend !== undefined && object.periodCanSpend !== null) {
            for (var _b = 0, _c = object.periodCanSpend; _b < _c.length; _b++) {
                var e = _c[_b];
                message.periodCanSpend.push(coin_1.Coin.fromJSON(e));
            }
        }
        if (object.periodReset !== undefined && object.periodReset !== null) {
            message.periodReset = exports.ExpiresAt.fromJSON(object.periodReset);
        }
        else {
            message.periodReset = undefined;
        }
        return message;
    },
    fromPartial: function (object) {
        var message = __assign({}, basePeriodicFeeAllowance);
        message.periodSpendLimit = [];
        message.periodCanSpend = [];
        if (object.basic !== undefined && object.basic !== null) {
            message.basic = exports.BasicFeeAllowance.fromPartial(object.basic);
        }
        else {
            message.basic = undefined;
        }
        if (object.period !== undefined && object.period !== null) {
            message.period = exports.Duration.fromPartial(object.period);
        }
        else {
            message.period = undefined;
        }
        if (object.periodSpendLimit !== undefined &&
            object.periodSpendLimit !== null) {
            for (var _i = 0, _a = object.periodSpendLimit; _i < _a.length; _i++) {
                var e = _a[_i];
                message.periodSpendLimit.push(coin_1.Coin.fromPartial(e));
            }
        }
        if (object.periodCanSpend !== undefined && object.periodCanSpend !== null) {
            for (var _b = 0, _c = object.periodCanSpend; _b < _c.length; _b++) {
                var e = _c[_b];
                message.periodCanSpend.push(coin_1.Coin.fromPartial(e));
            }
        }
        if (object.periodReset !== undefined && object.periodReset !== null) {
            message.periodReset = exports.ExpiresAt.fromPartial(object.periodReset);
        }
        else {
            message.periodReset = undefined;
        }
        return message;
    },
    toJSON: function (message) {
        var obj = {};
        message.basic !== undefined &&
            (obj.basic = message.basic
                ? exports.BasicFeeAllowance.toJSON(message.basic)
                : undefined);
        message.period !== undefined &&
            (obj.period = message.period
                ? exports.Duration.toJSON(message.period)
                : undefined);
        if (message.periodSpendLimit) {
            obj.periodSpendLimit = message.periodSpendLimit.map(function (e) {
                return e ? coin_1.Coin.toJSON(e) : undefined;
            });
        }
        else {
            obj.periodSpendLimit = [];
        }
        if (message.periodCanSpend) {
            obj.periodCanSpend = message.periodCanSpend.map(function (e) {
                return e ? coin_1.Coin.toJSON(e) : undefined;
            });
        }
        else {
            obj.periodCanSpend = [];
        }
        message.periodReset !== undefined &&
            (obj.periodReset = message.periodReset
                ? exports.ExpiresAt.toJSON(message.periodReset)
                : undefined);
        return obj;
    }
};
var baseAllowedMsgFeeAllowance = { allowedMessages: "" };
exports.AllowedMsgFeeAllowance = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        if (message.allowance !== undefined) {
            any_1.Any.encode(message.allowance, writer.uint32(10).fork()).ldelim();
        }
        for (var _i = 0, _a = message.allowedMessages; _i < _a.length; _i++) {
            var v = _a[_i];
            writer.uint32(18).string(v);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = globalThis.Object.create(baseAllowedMsgFeeAllowance);
        message.allowedMessages = [];
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.allowance = any_1.Any.decode(reader, reader.uint32());
                    break;
                case 2:
                    message.allowedMessages.push(reader.string());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        var message = globalThis.Object.create(baseAllowedMsgFeeAllowance);
        message.allowedMessages = [];
        if (object.allowance !== undefined && object.allowance !== null) {
            message.allowance = any_1.Any.fromJSON(object.allowance);
        }
        else {
            message.allowance = undefined;
        }
        if (object.allowedMessages !== undefined &&
            object.allowedMessages !== null) {
            for (var _i = 0, _a = object.allowedMessages; _i < _a.length; _i++) {
                var e = _a[_i];
                message.allowedMessages.push(String(e));
            }
        }
        return message;
    },
    fromPartial: function (object) {
        var message = __assign({}, baseAllowedMsgFeeAllowance);
        message.allowedMessages = [];
        if (object.allowance !== undefined && object.allowance !== null) {
            message.allowance = any_1.Any.fromPartial(object.allowance);
        }
        else {
            message.allowance = undefined;
        }
        if (object.allowedMessages !== undefined &&
            object.allowedMessages !== null) {
            for (var _i = 0, _a = object.allowedMessages; _i < _a.length; _i++) {
                var e = _a[_i];
                message.allowedMessages.push(e);
            }
        }
        return message;
    },
    toJSON: function (message) {
        var obj = {};
        message.allowance !== undefined &&
            (obj.allowance = message.allowance
                ? any_1.Any.toJSON(message.allowance)
                : undefined);
        if (message.allowedMessages) {
            obj.allowedMessages = message.allowedMessages.map(function (e) { return e; });
        }
        else {
            obj.allowedMessages = [];
        }
        return obj;
    }
};
var baseDuration = {};
exports.Duration = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        if (message.duration !== undefined) {
            duration_1.Duration.encode(message.duration, writer.uint32(10).fork()).ldelim();
        }
        if (message.blocks !== undefined) {
            writer.uint32(16).uint64(message.blocks);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = globalThis.Object.create(baseDuration);
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.duration = duration_1.Duration.decode(reader, reader.uint32());
                    break;
                case 2:
                    message.blocks = reader.uint64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        var message = globalThis.Object.create(baseDuration);
        if (object.duration !== undefined && object.duration !== null) {
            message.duration = duration_1.Duration.fromJSON(object.duration);
        }
        else {
            message.duration = undefined;
        }
        if (object.blocks !== undefined && object.blocks !== null) {
            message.blocks = Long.fromString(object.blocks);
        }
        else {
            message.blocks = undefined;
        }
        return message;
    },
    fromPartial: function (object) {
        var message = __assign({}, baseDuration);
        if (object.duration !== undefined && object.duration !== null) {
            message.duration = duration_1.Duration.fromPartial(object.duration);
        }
        else {
            message.duration = undefined;
        }
        if (object.blocks !== undefined && object.blocks !== null) {
            message.blocks = object.blocks;
        }
        else {
            message.blocks = undefined;
        }
        return message;
    },
    toJSON: function (message) {
        var obj = {};
        message.duration !== undefined &&
            (obj.duration = message.duration
                ? duration_1.Duration.toJSON(message.duration)
                : undefined);
        message.blocks !== undefined &&
            (obj.blocks = (message.blocks || undefined).toString());
        return obj;
    }
};
var baseExpiresAt = {};
exports.ExpiresAt = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        if (message.time !== undefined) {
            timestamp_1.Timestamp.encode(toTimestamp(message.time), writer.uint32(10).fork()).ldelim();
        }
        if (message.height !== undefined) {
            writer.uint32(16).int64(message.height);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = globalThis.Object.create(baseExpiresAt);
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.time = fromTimestamp(timestamp_1.Timestamp.decode(reader, reader.uint32()));
                    break;
                case 2:
                    message.height = reader.int64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        var message = globalThis.Object.create(baseExpiresAt);
        if (object.time !== undefined && object.time !== null) {
            message.time = fromJsonTimestamp(object.time);
        }
        else {
            message.time = undefined;
        }
        if (object.height !== undefined && object.height !== null) {
            message.height = Long.fromString(object.height);
        }
        else {
            message.height = undefined;
        }
        return message;
    },
    fromPartial: function (object) {
        var message = __assign({}, baseExpiresAt);
        if (object.time !== undefined && object.time !== null) {
            message.time = object.time;
        }
        else {
            message.time = undefined;
        }
        if (object.height !== undefined && object.height !== null) {
            message.height = object.height;
        }
        else {
            message.height = undefined;
        }
        return message;
    },
    toJSON: function (message) {
        var obj = {};
        message.time !== undefined &&
            (obj.time =
                message.time !== undefined ? message.time.toISOString() : null);
        message.height !== undefined &&
            (obj.height = (message.height || undefined).toString());
        return obj;
    }
};
var baseFeeAllowanceGrant = { granter: "", grantee: "" };
exports.FeeAllowanceGrant = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        if (message.granter !== "") {
            writer.uint32(10).string(message.granter);
        }
        if (message.grantee !== "") {
            writer.uint32(18).string(message.grantee);
        }
        if (message.allowance !== undefined) {
            any_1.Any.encode(message.allowance, writer.uint32(26).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = globalThis.Object.create(baseFeeAllowanceGrant);
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.granter = reader.string();
                    break;
                case 2:
                    message.grantee = reader.string();
                    break;
                case 3:
                    message.allowance = any_1.Any.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        var message = globalThis.Object.create(baseFeeAllowanceGrant);
        if (object.granter !== undefined && object.granter !== null) {
            message.granter = String(object.granter);
        }
        else {
            message.granter = "";
        }
        if (object.grantee !== undefined && object.grantee !== null) {
            message.grantee = String(object.grantee);
        }
        else {
            message.grantee = "";
        }
        if (object.allowance !== undefined && object.allowance !== null) {
            message.allowance = any_1.Any.fromJSON(object.allowance);
        }
        else {
            message.allowance = undefined;
        }
        return message;
    },
    fromPartial: function (object) {
        var message = __assign({}, baseFeeAllowanceGrant);
        if (object.granter !== undefined && object.granter !== null) {
            message.granter = object.granter;
        }
        else {
            message.granter = "";
        }
        if (object.grantee !== undefined && object.grantee !== null) {
            message.grantee = object.grantee;
        }
        else {
            message.grantee = "";
        }
        if (object.allowance !== undefined && object.allowance !== null) {
            message.allowance = any_1.Any.fromPartial(object.allowance);
        }
        else {
            message.allowance = undefined;
        }
        return message;
    },
    toJSON: function (message) {
        var obj = {};
        message.granter !== undefined && (obj.granter = message.granter);
        message.grantee !== undefined && (obj.grantee = message.grantee);
        message.allowance !== undefined &&
            (obj.allowance = message.allowance
                ? any_1.Any.toJSON(message.allowance)
                : undefined);
        return obj;
    }
};
var globalThis = (function () {
    if (typeof globalThis !== "undefined")
        return globalThis;
    if (typeof self !== "undefined")
        return self;
    if (typeof window !== "undefined")
        return window;
    if (typeof global !== "undefined")
        return global;
    throw "Unable to locate global object";
})();
function toTimestamp(date) {
    var seconds = numberToLong(date.getTime() / 1000);
    var nanos = (date.getTime() % 1000) * 1000000;
    return { seconds: seconds, nanos: nanos };
}
function fromTimestamp(t) {
    var millis = t.seconds.toNumber() * 1000;
    millis += t.nanos / 1000000;
    return new Date(millis);
}
function fromJsonTimestamp(o) {
    if (o instanceof Date) {
        return o;
    }
    else if (typeof o === "string") {
        return new Date(o);
    }
    else {
        return fromTimestamp(timestamp_1.Timestamp.fromJSON(o));
    }
}
function numberToLong(number) {
    return Long.fromNumber(number);
}
if (minimal_1.util.Long !== Long) {
    minimal_1.util.Long = Long;
    minimal_1.configure();
}
