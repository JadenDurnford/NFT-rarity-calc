import { Any } from "../../../google/protobuf/any";
import { Reader, Writer } from "protobufjs/minimal";
import * as Long from "long";
export declare const protobufPackage = "cosmos.feegrant.v1beta1";
/**
 * MsgGrantFeeAllowance adds permission for Grantee to spend up to Allowance
 * of fees from the account of Granter.
 */
export interface MsgGrantFeeAllowance {
    granter: string;
    grantee: string;
    allowance?: Any;
}
/** MsgGrantFeeAllowanceResponse defines the Msg/GrantFeeAllowanceResponse response type. */
export interface MsgGrantFeeAllowanceResponse {
}
/** MsgRevokeFeeAllowance removes any existing FeeAllowance from Granter to Grantee. */
export interface MsgRevokeFeeAllowance {
    granter: string;
    grantee: string;
}
/** MsgRevokeFeeAllowanceResponse defines the Msg/RevokeFeeAllowanceResponse response type. */
export interface MsgRevokeFeeAllowanceResponse {
}
export declare const MsgGrantFeeAllowance: {
    encode(message: MsgGrantFeeAllowance, writer?: Writer): Writer;
    decode(input: Reader | Uint8Array, length?: number | undefined): MsgGrantFeeAllowance;
    fromJSON(object: any): MsgGrantFeeAllowance;
    fromPartial(object: DeepPartial<MsgGrantFeeAllowance>): MsgGrantFeeAllowance;
    toJSON(message: MsgGrantFeeAllowance): unknown;
};
export declare const MsgGrantFeeAllowanceResponse: {
    encode(_: MsgGrantFeeAllowanceResponse, writer?: Writer): Writer;
    decode(input: Reader | Uint8Array, length?: number | undefined): MsgGrantFeeAllowanceResponse;
    fromJSON(_: any): MsgGrantFeeAllowanceResponse;
    fromPartial(_: DeepPartial<MsgGrantFeeAllowanceResponse>): MsgGrantFeeAllowanceResponse;
    toJSON(_: MsgGrantFeeAllowanceResponse): unknown;
};
export declare const MsgRevokeFeeAllowance: {
    encode(message: MsgRevokeFeeAllowance, writer?: Writer): Writer;
    decode(input: Reader | Uint8Array, length?: number | undefined): MsgRevokeFeeAllowance;
    fromJSON(object: any): MsgRevokeFeeAllowance;
    fromPartial(object: DeepPartial<MsgRevokeFeeAllowance>): MsgRevokeFeeAllowance;
    toJSON(message: MsgRevokeFeeAllowance): unknown;
};
export declare const MsgRevokeFeeAllowanceResponse: {
    encode(_: MsgRevokeFeeAllowanceResponse, writer?: Writer): Writer;
    decode(input: Reader | Uint8Array, length?: number | undefined): MsgRevokeFeeAllowanceResponse;
    fromJSON(_: any): MsgRevokeFeeAllowanceResponse;
    fromPartial(_: DeepPartial<MsgRevokeFeeAllowanceResponse>): MsgRevokeFeeAllowanceResponse;
    toJSON(_: MsgRevokeFeeAllowanceResponse): unknown;
};
/** Msg defines the feegrant msg service. */
export interface Msg {
    /**
     * GrantFeeAllowance grants fee allowance to the grantee on the granter's
     * account with the provided expiration time.
     */
    GrantFeeAllowance(request: MsgGrantFeeAllowance): Promise<MsgGrantFeeAllowanceResponse>;
    /**
     * RevokeFeeAllowance revokes any fee allowance of granter's account that
     * has been granted to the grantee.
     */
    RevokeFeeAllowance(request: MsgRevokeFeeAllowance): Promise<MsgRevokeFeeAllowanceResponse>;
}
export declare class MsgClientImpl implements Msg {
    private readonly rpc;
    constructor(rpc: Rpc);
    GrantFeeAllowance(request: MsgGrantFeeAllowance): Promise<MsgGrantFeeAllowanceResponse>;
    RevokeFeeAllowance(request: MsgRevokeFeeAllowance): Promise<MsgRevokeFeeAllowanceResponse>;
}
interface Rpc {
    request(service: string, method: string, data: Uint8Array): Promise<Uint8Array>;
}
declare type Builtin = Date | Function | Uint8Array | string | number | undefined | Long;
export declare type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
export {};
