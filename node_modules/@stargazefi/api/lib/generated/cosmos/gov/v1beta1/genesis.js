"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
exports.__esModule = true;
exports.GenesisState = exports.protobufPackage = void 0;
/* eslint-disable */
var Long = require("long");
var gov_1 = require("../../../cosmos/gov/v1beta1/gov");
var minimal_1 = require("protobufjs/minimal");
exports.protobufPackage = "cosmos.gov.v1beta1";
var baseGenesisState = { startingProposalId: Long.UZERO };
exports.GenesisState = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        if (!message.startingProposalId.isZero()) {
            writer.uint32(8).uint64(message.startingProposalId);
        }
        for (var _i = 0, _a = message.deposits; _i < _a.length; _i++) {
            var v = _a[_i];
            gov_1.Deposit.encode(v, writer.uint32(18).fork()).ldelim();
        }
        for (var _b = 0, _c = message.votes; _b < _c.length; _b++) {
            var v = _c[_b];
            gov_1.Vote.encode(v, writer.uint32(26).fork()).ldelim();
        }
        for (var _d = 0, _e = message.proposals; _d < _e.length; _d++) {
            var v = _e[_d];
            gov_1.Proposal.encode(v, writer.uint32(34).fork()).ldelim();
        }
        if (message.depositParams !== undefined) {
            gov_1.DepositParams.encode(message.depositParams, writer.uint32(42).fork()).ldelim();
        }
        if (message.votingParams !== undefined) {
            gov_1.VotingParams.encode(message.votingParams, writer.uint32(50).fork()).ldelim();
        }
        if (message.tallyParams !== undefined) {
            gov_1.TallyParams.encode(message.tallyParams, writer.uint32(58).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = globalThis.Object.create(baseGenesisState);
        message.deposits = [];
        message.votes = [];
        message.proposals = [];
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.startingProposalId = reader.uint64();
                    break;
                case 2:
                    message.deposits.push(gov_1.Deposit.decode(reader, reader.uint32()));
                    break;
                case 3:
                    message.votes.push(gov_1.Vote.decode(reader, reader.uint32()));
                    break;
                case 4:
                    message.proposals.push(gov_1.Proposal.decode(reader, reader.uint32()));
                    break;
                case 5:
                    message.depositParams = gov_1.DepositParams.decode(reader, reader.uint32());
                    break;
                case 6:
                    message.votingParams = gov_1.VotingParams.decode(reader, reader.uint32());
                    break;
                case 7:
                    message.tallyParams = gov_1.TallyParams.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        var message = globalThis.Object.create(baseGenesisState);
        message.deposits = [];
        message.votes = [];
        message.proposals = [];
        if (object.startingProposalId !== undefined &&
            object.startingProposalId !== null) {
            message.startingProposalId = Long.fromString(object.startingProposalId);
        }
        else {
            message.startingProposalId = Long.UZERO;
        }
        if (object.deposits !== undefined && object.deposits !== null) {
            for (var _i = 0, _a = object.deposits; _i < _a.length; _i++) {
                var e = _a[_i];
                message.deposits.push(gov_1.Deposit.fromJSON(e));
            }
        }
        if (object.votes !== undefined && object.votes !== null) {
            for (var _b = 0, _c = object.votes; _b < _c.length; _b++) {
                var e = _c[_b];
                message.votes.push(gov_1.Vote.fromJSON(e));
            }
        }
        if (object.proposals !== undefined && object.proposals !== null) {
            for (var _d = 0, _e = object.proposals; _d < _e.length; _d++) {
                var e = _e[_d];
                message.proposals.push(gov_1.Proposal.fromJSON(e));
            }
        }
        if (object.depositParams !== undefined && object.depositParams !== null) {
            message.depositParams = gov_1.DepositParams.fromJSON(object.depositParams);
        }
        else {
            message.depositParams = undefined;
        }
        if (object.votingParams !== undefined && object.votingParams !== null) {
            message.votingParams = gov_1.VotingParams.fromJSON(object.votingParams);
        }
        else {
            message.votingParams = undefined;
        }
        if (object.tallyParams !== undefined && object.tallyParams !== null) {
            message.tallyParams = gov_1.TallyParams.fromJSON(object.tallyParams);
        }
        else {
            message.tallyParams = undefined;
        }
        return message;
    },
    fromPartial: function (object) {
        var message = __assign({}, baseGenesisState);
        message.deposits = [];
        message.votes = [];
        message.proposals = [];
        if (object.startingProposalId !== undefined &&
            object.startingProposalId !== null) {
            message.startingProposalId = object.startingProposalId;
        }
        else {
            message.startingProposalId = Long.UZERO;
        }
        if (object.deposits !== undefined && object.deposits !== null) {
            for (var _i = 0, _a = object.deposits; _i < _a.length; _i++) {
                var e = _a[_i];
                message.deposits.push(gov_1.Deposit.fromPartial(e));
            }
        }
        if (object.votes !== undefined && object.votes !== null) {
            for (var _b = 0, _c = object.votes; _b < _c.length; _b++) {
                var e = _c[_b];
                message.votes.push(gov_1.Vote.fromPartial(e));
            }
        }
        if (object.proposals !== undefined && object.proposals !== null) {
            for (var _d = 0, _e = object.proposals; _d < _e.length; _d++) {
                var e = _e[_d];
                message.proposals.push(gov_1.Proposal.fromPartial(e));
            }
        }
        if (object.depositParams !== undefined && object.depositParams !== null) {
            message.depositParams = gov_1.DepositParams.fromPartial(object.depositParams);
        }
        else {
            message.depositParams = undefined;
        }
        if (object.votingParams !== undefined && object.votingParams !== null) {
            message.votingParams = gov_1.VotingParams.fromPartial(object.votingParams);
        }
        else {
            message.votingParams = undefined;
        }
        if (object.tallyParams !== undefined && object.tallyParams !== null) {
            message.tallyParams = gov_1.TallyParams.fromPartial(object.tallyParams);
        }
        else {
            message.tallyParams = undefined;
        }
        return message;
    },
    toJSON: function (message) {
        var obj = {};
        message.startingProposalId !== undefined &&
            (obj.startingProposalId = (message.startingProposalId || Long.UZERO).toString());
        if (message.deposits) {
            obj.deposits = message.deposits.map(function (e) {
                return e ? gov_1.Deposit.toJSON(e) : undefined;
            });
        }
        else {
            obj.deposits = [];
        }
        if (message.votes) {
            obj.votes = message.votes.map(function (e) { return (e ? gov_1.Vote.toJSON(e) : undefined); });
        }
        else {
            obj.votes = [];
        }
        if (message.proposals) {
            obj.proposals = message.proposals.map(function (e) {
                return e ? gov_1.Proposal.toJSON(e) : undefined;
            });
        }
        else {
            obj.proposals = [];
        }
        message.depositParams !== undefined &&
            (obj.depositParams = message.depositParams
                ? gov_1.DepositParams.toJSON(message.depositParams)
                : undefined);
        message.votingParams !== undefined &&
            (obj.votingParams = message.votingParams
                ? gov_1.VotingParams.toJSON(message.votingParams)
                : undefined);
        message.tallyParams !== undefined &&
            (obj.tallyParams = message.tallyParams
                ? gov_1.TallyParams.toJSON(message.tallyParams)
                : undefined);
        return obj;
    }
};
var globalThis = (function () {
    if (typeof globalThis !== "undefined")
        return globalThis;
    if (typeof self !== "undefined")
        return self;
    if (typeof window !== "undefined")
        return window;
    if (typeof global !== "undefined")
        return global;
    throw "Unable to locate global object";
})();
