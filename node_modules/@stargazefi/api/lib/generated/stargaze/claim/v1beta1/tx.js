"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
exports.__esModule = true;
exports.MsgClientImpl = exports.MsgInitialClaimResponse = exports.MsgInitialClaim = exports.protobufPackage = void 0;
/* eslint-disable */
var minimal_1 = require("protobufjs/minimal");
var coin_1 = require("../../../cosmos/base/v1beta1/coin");
exports.protobufPackage = "publicawesome.stargaze.claim.v1beta1";
var baseMsgInitialClaim = { sender: "" };
exports.MsgInitialClaim = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        if (message.sender !== "") {
            writer.uint32(10).string(message.sender);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = globalThis.Object.create(baseMsgInitialClaim);
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.sender = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        var message = globalThis.Object.create(baseMsgInitialClaim);
        if (object.sender !== undefined && object.sender !== null) {
            message.sender = String(object.sender);
        }
        else {
            message.sender = "";
        }
        return message;
    },
    fromPartial: function (object) {
        var message = __assign({}, baseMsgInitialClaim);
        if (object.sender !== undefined && object.sender !== null) {
            message.sender = object.sender;
        }
        else {
            message.sender = "";
        }
        return message;
    },
    toJSON: function (message) {
        var obj = {};
        message.sender !== undefined && (obj.sender = message.sender);
        return obj;
    }
};
var baseMsgInitialClaimResponse = {};
exports.MsgInitialClaimResponse = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.Writer.create(); }
        for (var _i = 0, _a = message.claimedAmount; _i < _a.length; _i++) {
            var v = _a[_i];
            coin_1.Coin.encode(v, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof Uint8Array ? new minimal_1.Reader(input) : input;
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = globalThis.Object.create(baseMsgInitialClaimResponse);
        message.claimedAmount = [];
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 2:
                    message.claimedAmount.push(coin_1.Coin.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        var message = globalThis.Object.create(baseMsgInitialClaimResponse);
        message.claimedAmount = [];
        if (object.claimedAmount !== undefined && object.claimedAmount !== null) {
            for (var _i = 0, _a = object.claimedAmount; _i < _a.length; _i++) {
                var e = _a[_i];
                message.claimedAmount.push(coin_1.Coin.fromJSON(e));
            }
        }
        return message;
    },
    fromPartial: function (object) {
        var message = __assign({}, baseMsgInitialClaimResponse);
        message.claimedAmount = [];
        if (object.claimedAmount !== undefined && object.claimedAmount !== null) {
            for (var _i = 0, _a = object.claimedAmount; _i < _a.length; _i++) {
                var e = _a[_i];
                message.claimedAmount.push(coin_1.Coin.fromPartial(e));
            }
        }
        return message;
    },
    toJSON: function (message) {
        var obj = {};
        if (message.claimedAmount) {
            obj.claimedAmount = message.claimedAmount.map(function (e) {
                return e ? coin_1.Coin.toJSON(e) : undefined;
            });
        }
        else {
            obj.claimedAmount = [];
        }
        return obj;
    }
};
var MsgClientImpl = /** @class */ (function () {
    function MsgClientImpl(rpc) {
        this.rpc = rpc;
    }
    MsgClientImpl.prototype.InitialClaim = function (request) {
        var data = exports.MsgInitialClaim.encode(request).finish();
        var promise = this.rpc.request("publicawesome.stargaze.claim.v1beta1.Msg", "InitialClaim", data);
        return promise.then(function (data) {
            return exports.MsgInitialClaimResponse.decode(new minimal_1.Reader(data));
        });
    };
    return MsgClientImpl;
}());
exports.MsgClientImpl = MsgClientImpl;
var globalThis = (function () {
    if (typeof globalThis !== "undefined")
        return globalThis;
    if (typeof self !== "undefined")
        return self;
    if (typeof window !== "undefined")
        return window;
    if (typeof global !== "undefined")
        return global;
    throw "Unable to locate global object";
})();
